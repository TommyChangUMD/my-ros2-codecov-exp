
##############################################################################
#
# GitGub CI workflow syntax spec:
#    https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions
#
# CodeCov github action setup:
#    https://github.com/codecov/codecov-action
#
# CodeCov badge setup:
#    https://docs.codecov.com/docs/status-badges
#
# version 1.1
##############################################################################

name: Build

on:
  # Triggered whenever push to the main branch
  push:
    branches: [ "main" ]

  # Triggered whenever a pull request is created on main
  pull_request:
    branches: [ "main" ]
    types: [opened]

  # Allow manual trigger
  workflow_dispatch:

jobs:
  build:
    # Create a container of the latest Ubuntu, other values could be
    # ubuntu-latest, ubuntu-22.04, etc.
    runs-on: ubuntu-22.04
    
    steps:
      # We want to use GitHub CI checkout version 3 to check out our branch
      - uses: actions/checkout@v3
      
      # Install some system pacakges
      - name: Install ROS 2 Humble packages
        run: |
          sudo apt update
          sudo apt install software-properties-common
          sudo add-apt-repository universe
          sudo apt update && sudo apt install curl
          sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key \
            -o /usr/share/keyrings/ros-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) \
            signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] \
            http://packages.ros.org/ros2/ubuntu \
            $(. /etc/os-release && echo $UBUNTU_CODENAME) main" \
            | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null
          sudo apt update
          sudo apt install ros-humble-ros-base python3-colcon-common-extensions lcov


      # Build for test coverage
      - name: Configure CMake flags and build exectables
        run: |
          source /opt/ros/humble/setup.bash
          colcon build --cmake-args -DCOVERAGE=1 --packages-select cpp_pubsub
          cat log/latest_build/cpp_pubsub/stdout_stderr.log
          find build/cpp_pubsub/ | grep -E 'gcda|gcno' # catch error
      
      # Check c++ code (and others) for style and static coding errors
      - name: Check code sytle and error
        run: |
          source /opt/ros/humble/setup.bash
          colcon test --packages-select cpp_pubsub
          cat log/latest_test/cpp_pubsub/stdout_stderr.log
          colcon test-result --test-result-base build/cpp_pubsub/ # catch error

      # Run test suite and compute code coverage
      - name: Run Test Coverage
        run: |
          source install/setup.bash
          timeout -s SIGINT 3 ros2 launch cpp_pubsub run_test.launch.py || true
          find build/cpp_pubsub/ | grep -E 'gcda|gcno' # catch error
          ros2 run cpp_pubsub generate_coverage_report.bash
      
      # Upload coverage result to CodeCov
      - name: Upload result to CodeCov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          files: ${{github.workspace}}/install/cpp_pubsub/lib/cpp_pubsub/coverage_cleaned.info
          # flags: unittests # optional
          # directory: ${{github.workspace}}/install/
          # name: codecov-umbrella # optional
          fail_ci_if_error: true # optional (default = false)
          verbose: true # optional (default = false)      
